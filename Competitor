import java.util.Arrays;
import java.util.HashSet;

public class Competitor {
    private int competitorID;
    private String name;
    private int age;
    private String category;
    private int [] scores;
    private  HashSet<CategoryType> categoryTypes;
    private CategoryType type;

    public Competitor(String nm, int cid, int age, String cat, int[] scores){
        this.competitorID = competitorID;
        this.name = name;
        this.age = age;
        this.scores = scores;
    }
    public int getCompetitorID() {
        return competitorID;
    }
    public String getName() {
        return name;
    }
    public int getAge() {return age;}
    public String getCategory(){return category;}
    public int[] getScoreArray() {return scores;}
    public void setScoreAry(int[] scores) {this.scores = scores;}

    public double getOverallScore() {
        return 0;
    }

    public String getFullDetails() {
        String scoresString = Arrays.toString(this.scores).replaceAll("[\\[\\]]", "");
        return String.format("Competitor ID%d, name %s. \n%s is %s aged %d and received total scores:",
                competitorID, name, name.split(" ")[0], age, scoresString, getOverallScore());
    }

    public String getShortDetails() {
        String initials = Arrays.stream(this.name.split(" "))
                .map(namePart -> namePart.substring(0, 1))
                .reduce("", (a, b) -> a + b);
        return String.format("CN %d (%s) has overall score %.1f.", competitorID, initials, getOverallScore());
    }
    public CategoryType getType(){return type;}


    public void add(Competitor competitor) {}


}

}

        this.category = category;

    }

// getter and setters for each attributes


    public int getCompetitorID() {
        return competitorID;
    }

    public void setCompetitorID(int competitorID) {
        this.competitorID = competitorID;
    }

    public int[] getScores() {
        return scores;
    }

    public void setScores(int[] scores) {
        this.scores = scores;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public int[] getScoreArray() {
        return scores;
    }

    public void setScoreArray(int[] scores) {
        this.scores = scores;
    }

    //A method which will be used later, to get the overall score
    public abstract double getOverallScore();

    //method which returns a String containing all the details of the competitor
    public String getFullDetails()
    {
        String scoresString = Arrays.toString(this.scores).replace("'", "\\'");
        return String.format("Competitor ID %d, name %s,  email %s,  category  %s.\n And the Overall score of %.1f.",
                competitorID, name, email, category, name.split("")[0], scoresString, getOverallScore());

    }

    //method which returns a String containing a ONLY competitor number, initials and overall score
    public String getShortDetails()
    {
        String initials = Arrays.stream(this.name.split(""))
                .map(name -> name.substring(0,1))
                .reduce("", (a, b) -> a + b);
        return String.format("CID %d (%s) has overall score of %.1f,", competitorID, initials, getOverallScore());
    }
    

}
